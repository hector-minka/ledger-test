import { JWTVerifyResult } from 'jose';
import { LedgerJWTPayload } from "../../../../types/src";
/**
 * This function is used to concatenate multiple buffers
 * into a single buffer.
 * It's used further in the code to concatenate the header
 * and payload with a dot separator.
 */
export declare function bufferConcat(...buffers: any[]): Uint8Array<any>;
/**
 * This function abstracts the decoding of a base64 encoded
 * JSON into an object.
 */
export declare function parseB64Object(b64: string): any;
export declare function signJWT(payload: LedgerJWTPayload, secret: string, kid: string): Promise<string>;
export declare function getJWTProtectedHeader(jws: string): Record<string, unknown>;
export declare function verifyJWT(jws: string, publicKey: string, _format?: string): Promise<JWTVerifyResult>;
