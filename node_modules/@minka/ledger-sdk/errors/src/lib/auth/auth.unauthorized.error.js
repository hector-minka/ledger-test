"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthUnauthorized = void 0;
const common_1 = require("../common");
/**
 * Error thrown when security credentials are missing or the credentials presented are invalid or expired.
 * Credentials are invalid when JWT signature is invalid or the JWT payload is invalid.
 */
class AuthUnauthorized extends common_1.LedgerError {
    /**
     *
     * @param detail error detail - message
     * @param custom custom data record to attach
     *               additional info about the error
     */
    constructor(detail, custom) {
        super(AuthUnauthorized.REASON, detail, custom);
    }
    static REASON = common_1.LedgerErrorReason.AuthUnauthorized;
}
exports.AuthUnauthorized = AuthUnauthorized;
//# sourceMappingURL=auth.unauthorized.error.js.map