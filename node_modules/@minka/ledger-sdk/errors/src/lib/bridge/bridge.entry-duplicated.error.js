"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BridgeEntryDuplicated = void 0;
const common_1 = require("../common");
/**
 * Error thrown when a different entry for same intent claim with same source or target was already received before.
 * Used to reject double spending for the same intent. This error should not be reported when handling idempotency,
 * meaning when the action with same handle is received multiple times.
 */
class BridgeEntryDuplicated extends common_1.LedgerError {
    /**
     *
     * @param detail error detail - message
     * @param custom custom data record to attach
     *               additional info about the error
     */
    constructor(detail, custom) {
        super(BridgeEntryDuplicated.REASON, detail, custom);
    }
    static REASON = common_1.LedgerErrorReason.BridgeEntryDuplicated;
}
exports.BridgeEntryDuplicated = BridgeEntryDuplicated;
//# sourceMappingURL=bridge.entry-duplicated.error.js.map