import { LedgerCustom, LedgerError, LedgerErrorReason } from '../common';
/**
 * Error thrown when an unexpected error happened on bridge when processing entry.
 * In case when error happens in the bridge process which handles the action and canâ€™t
 * be classified as any of existing bridge errors. Recommended to set the failId to error
 * type identifier (error class name or similar) and detail to error message in the signature
 * which reports the error.
 */
export declare class BridgeUnexpectedError extends LedgerError {
    /**
     *
     * @param detail error detail - message
     * @param custom custom data record to attach
     *               additional info about the error
     */
    constructor(detail: string, custom?: LedgerCustom);
    static REASON: LedgerErrorReason;
}
