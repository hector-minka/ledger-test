import { ArrayTransformer, LedgerLabel, LedgerLabelAddToSet, LedgerLabelPull, LedgerLabelPullAll, LedgerLabelPush, LedgerLabelQuery, Pop, PushAggregation } from "../../../types/src";
export type SetLabelsOptions = ArrayTransformer & {
    $position?: PushAggregation<LedgerLabel>['$position'];
    labelsAllowedByPolicy?: LedgerLabel[];
};
export declare function appendLabels(query: LedgerLabel[], current: LedgerLabel[], labelsAllowedByPolicy?: LedgerLabel[]): string[];
export declare function transformLabels(current: LedgerLabel[], options?: ArrayTransformer): string[];
export declare function setLabels(values: LedgerLabel[], current: LedgerLabel[], options?: SetLabelsOptions): string[];
export declare function isLabelAllowedByPolicy(label: LedgerLabel, labelsAllowedByPolicy?: LedgerLabel[]): boolean;
export declare function pushLabels(query: LedgerLabelPush, current: LedgerLabel[], labelsAllowedByPolicy?: LedgerLabel[]): string[];
export declare function addToSetLabels(query: LedgerLabelAddToSet, current: LedgerLabel[], labelsAllowedByPolicy?: LedgerLabel[]): string[];
export declare function pullLabels(query: LedgerLabelPull, current: LedgerLabel[]): string[];
export declare function pullAllLabels(query: LedgerLabelPullAll, current: LedgerLabel[]): string[];
export declare function popLabels(query: Pop, current: LedgerLabel[]): string[];
export declare function calculateLabels(query: LedgerLabelQuery, current: LedgerLabel[], labelsAllowedByPolicy?: LedgerLabel[]): string[];
