/**
 * @module Types / RecordResponse
 * @category Types
 */
import { AxiosResponse } from 'axios';
import { LedgerHash, LedgerLuid, LedgerMeta, LedgerRecord } from "../../../../types/src";
import { LedgerResponse } from './ledger-response';
/**
 * Generic API response that flattens the response data in order to make
 * it easier to use for most cases. A full response is also available to
 * support more advanced use cases.
 */
export declare class BaseRecordResponse<T, M extends LedgerMeta = LedgerMeta> extends LedgerResponse {
    /**
     * The raw server response.
     */
    response: AxiosResponse<LedgerRecord<T, M>>;
    /**
     * Hash of the record.
     */
    hash: LedgerHash;
    /**
     * Metadata of the record.
     */
    meta: M;
    /**
     * Ledger record unique id.
     */
    luid: LedgerLuid;
    constructor(response: AxiosResponse<LedgerRecord<T, M>, LedgerRecord<T, M>>);
}
/**
 * A type that covers all RecordResponse classes. This type can be used
 * to pass response classes to functions so that those functions can
 * construct them when a response is received.
 */
export type RecordResponseClass<T, R extends BaseRecordResponse<T, M>, M extends LedgerMeta = LedgerMeta> = new (response: AxiosResponse<LedgerRecord<T, M>, LedgerRecord<T, M>>) => R;
