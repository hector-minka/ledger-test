/**
 * @module Clients / Status
 * @category Entities
 */
import { AxiosResponse } from 'axios';
import { LedgerRecord, LedgerStatus } from "../../../types/src";
import { BaseClient } from '../common/clients/base-client';
import { BaseRecordResponse } from '../common/types/base-record-response';
/**
 * Ledger status API response.
 */
export declare class StatusResponse extends BaseRecordResponse<LedgerStatus> {
    /**
     * Record data extracted from the `data` property of the response body.
     */
    status: LedgerStatus;
    constructor(response: AxiosResponse<LedgerRecord<LedgerStatus>, LedgerRecord<LedgerStatus>>);
}
/**
 * Allows querying the ledger status.
 *
 * @see {LedgerStatus}
 */
export declare class StatusClient extends BaseClient {
    /**
     * Returns the basic info about a ledger instance. This request
     * can be used to validate ledger URLs and to check if an instance
     * is up and running.
     *
     * @see {LedgerStatus}
     * @returns the ledger status info
     */
    read(): Promise<StatusResponse>;
    /**
     * This client doesn't have any remote entity to handle,
     * so this method is a no-op.
     * TODO: Write an special client for entities that directly
     * extends base-client.
     */
    init(): any;
}
