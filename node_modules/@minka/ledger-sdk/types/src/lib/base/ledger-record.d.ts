import { LedgerHash } from '../common/ledger-hash';
import { LedgerLuid } from '../common/ledger-luid';
import { LedgerMeta } from '../common/ledger-meta';
/**
 * A generic ledger record. This is the data structure that all
 * ledger records must follow. Properties `hash` and `meta` are
 * common to all records, while `data` property is flexible and
 * is used to define specific values that can be different for
 * each record.
 */
export type LedgerRecord<TData extends Record<string, any>, TMeta extends LedgerMeta = LedgerMeta> = {
    /**
     * Record unique identifier generated by the server
     * when the record is created.
     */
    luid?: LedgerLuid;
    /**
     * Hash of the ledger record. Only data property is hashed.
     */
    hash: LedgerHash;
    /**
     * Properties specific to each ledger record. See specific
     * record types for more information.
     *
     * @see records directory
     */
    data: TData;
    /**
     * Metadata of the response. This property contains signatures
     * of each ledger record.
     */
    meta: TMeta;
};
