import { LedgerAccess } from '../common/ledger-access';
import { LedgerAddress } from '../common/ledger-address';
import { LedgerCustom } from '../common/ledger-custom';
import { LedgerBaseData } from '../common/ledger-data';
import { LedgerHandle } from '../common/ledger-handle';
/**
 * TODO: Write anchor description
 */
export type LedgerAnchor = LedgerBaseData & {
    /**
     * Ledger handle or identifier.
     */
    handle: LedgerHandle;
    /**
     * Anchor source wallet address.
     */
    wallet?: LedgerAddress;
    /**
     * Anchor target address.
     */
    target: LedgerAddress;
    /**
     * Symbol handle.
     */
    symbol?: LedgerHandle;
    /**
     * The schema used to validate this anchor. This is mandatory
     * if there is at least one schema defined for the record
     * type `anchor`.
     */
    schema?: LedgerHandle;
    /**
     * Custom metadata, this object can hold any
     * additional data that could be useful to end users
     * or ledger plugins to work with the anchor.
     */
    custom?: LedgerCustom;
    /**
     * Determines access controls of an anchor. This field
     * can be used to limit updates, issuance, etc.
     */
    access?: LedgerAccess;
};
