"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSignals = exports.EventSignal = void 0;
/**
 * Name of the signal of the event.
 */
var EventSignal;
(function (EventSignal) {
    EventSignal["AnchorCreated"] = "anchor-created";
    EventSignal["AnchorDropped"] = "anchor-dropped";
    EventSignal["AnchorProofsAdded"] = "anchor-proofs-added";
    EventSignal["AnchorUpdated"] = "anchor-updated";
    EventSignal["BalanceReceived"] = "balance-received";
    EventSignal["BridgeCreated"] = "bridge-created";
    EventSignal["BridgeEntryCreated"] = "bridge-entry-created";
    EventSignal["BridgeEntryProofsAdded"] = "bridge-entry-proofs-added";
    EventSignal["BridgeEntryUpdated"] = "bridge-entry-updated";
    EventSignal["BridgeProofsAdded"] = "bridge-proofs-added";
    EventSignal["BridgeUpdated"] = "bridge-updated";
    EventSignal["CircleCreated"] = "circle-created";
    EventSignal["CircleProofsAdded"] = "circle-proofs-added";
    EventSignal["CircleUpdated"] = "circle-updated";
    EventSignal["DomainCreated"] = "domain-created";
    EventSignal["DomainProofsAdded"] = "domain-proofs-added";
    EventSignal["DomainUpdated"] = "domain-updated";
    EventSignal["EffectCreated"] = "effect-created";
    EventSignal["EffectProofsAdded"] = "effect-proofs-added";
    EventSignal["EffectUpdated"] = "effect-updated";
    EventSignal["IntentCreated"] = "intent-created";
    EventSignal["IntentProofsAdded"] = "intent-proofs-added";
    EventSignal["IntentUpdated"] = "intent-updated";
    EventSignal["LedgerCreated"] = "ledger-created";
    EventSignal["LedgerProofsAdded"] = "ledger-proofs-added";
    EventSignal["LedgerUpdated"] = "ledger-updated";
    EventSignal["PolicyCreated"] = "policy-created";
    EventSignal["PolicyProofsAdded"] = "policy-proofs-added";
    EventSignal["PolicyUpdated"] = "policy-updated";
    EventSignal["ReportCreated"] = "report-created";
    EventSignal["ReportDropped"] = "report-dropped";
    EventSignal["ReportProofsAdded"] = "report-proofs-added";
    EventSignal["ReportUpdated"] = "report-updated";
    EventSignal["RequestCreated"] = "request-created";
    EventSignal["RequestProofsAdded"] = "request-proofs-added";
    EventSignal["RequestUpdated"] = "request-updated";
    EventSignal["SchemaCreated"] = "schema-created";
    EventSignal["SchemaProofsAdded"] = "schema-proofs-added";
    EventSignal["SchemaUpdated"] = "schema-updated";
    EventSignal["SignerCreated"] = "signer-created";
    EventSignal["SignerProofsAdded"] = "signer-proofs-added";
    EventSignal["SignerUpdated"] = "signer-updated";
    EventSignal["SignerFactorCreated"] = "signer-factor-created";
    EventSignal["SignerFactorProofsAdded"] = "signer-factor-proofs-added";
    EventSignal["SignerFactorUpdated"] = "signer-factor-updated";
    EventSignal["SignerFactorDropped"] = "signer-factor-dropped";
    EventSignal["SymbolCreated"] = "symbol-created";
    EventSignal["SymbolProofsAdded"] = "symbol-proofs-added";
    EventSignal["SymbolUpdated"] = "symbol-updated";
    EventSignal["WalletCreated"] = "wallet-created";
    EventSignal["WalletDropped"] = "wallet-dropped";
    EventSignal["WalletLimited"] = "wallet-limited";
    EventSignal["WalletProofsAdded"] = "wallet-proofs-added";
    EventSignal["WalletUpdated"] = "wallet-updated";
})(EventSignal || (exports.EventSignal = EventSignal = {}));
/**
 * All possible event signals.
 */
exports.EventSignals = Object.values(EventSignal);
//# sourceMappingURL=ledger-event.js.map